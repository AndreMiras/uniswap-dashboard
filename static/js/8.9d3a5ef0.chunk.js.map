{"version":3,"sources":["providers/Uniswap/index.tsx","components/Tokens/Table.tsx","components/Transactions/Table.tsx","components/Icons/Coins.tsx","routes/Home/index.tsx"],"names":["console","log","UniswapV2Factory","UniswapV2Pair","getUniswapV2PairContract","address","web3","eth","Contract","abi","from","a","contract","Promise","all","methods","balanceOf","call","token0","token1","getReserves","totalSupply","balance","reserve0","_reserve0","reserve1","_reserve1","blockTimestampLast","_blockTimestampLast","Number","utils","fromWei","isUniswapSymbol","symbol","startsWith","TokensTable","useWeb3AddressInfo","data","loading","error","Paper","Box","maxWidth","overflow","Table","TableHead","TableRow","TableCell","Typography","align","style","padding","colSpan","LinearProgress","TableBody","tokens","map","token","key","tokenInfo","TokenRow","useWeb3Addresses","useState","pairInfo","setPairInfo","useEffect","loadUniswapPairInfo","then","info","catch","e","hover","display","alignItems","mr","Avatar","src","process","toLowerCase","diameter","name","weiBalance","flexDirection","justifyContent","mb","marginRight","toLocaleString","undefined","maximumFractionDigits","minimumFractionDigits","usdBalance","TransactionsTable","useWeb3AddressTransactions","tx","hash","TransactionRow","Tooltip","title","Hidden","mdDown","to","smDown","value","CoinsIcon","props","fill","xmlns","viewBox","className","d","useStyles","makeStyles","theme","createStyles","tabRoot","minHeight","tab","breakpoints","up","paddingLeft","paddingRight","Home","classes","setTab","Main","pt","pb","Grid","container","item","xs","Tabs","onChange","ev","aria-label","variant","scrollButtons","Tab","label","marginBottom","icon","Coins","root","wrapper","Divider","activeTab","index","px","Uniswap","TabPanel","children","Slide","in","direction","position","opacity"],"mappings":"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","file":"static/js/8.9d3a5ef0.chunk.js","sourcesContent":["import UniswapV2Factory from \"@uniswap/v2-core/build/UniswapV2Factory.json\";\nimport UniswapV2Pair from \"@uniswap/v2-core/build/UniswapV2Pair.json\";\nimport { web3 } from \"../Web3\";\n\nconsole.log(UniswapV2Factory, UniswapV2Pair);\nexport const getUniswapV2FactoryContract = () =>\n  new web3.eth.Contract(UniswapV2Factory.abi as any);\nexport const getUniswapV2PairContract = (address: string) =>\n  new web3.eth.Contract(UniswapV2Pair.abi as any, address);\n\nexport async function loadUniswapPairInfo(\n  address: string,\n  from: string\n): Promise<IUniswapInfo> {\n  const contract = getUniswapV2PairContract(address);\n  const [\n    balance,\n    token0,\n    token1,\n    {\n      _reserve0: reserve0,\n      _reserve1: reserve1,\n      _blockTimestampLast: blockTimestampLast,\n    },\n    totalSupply,\n  ] = await Promise.all([\n    contract.methods.balanceOf(from).call({ from }),\n    contract.methods.token0().call({ from }),\n    contract.methods.token1().call({ from }),\n    contract.methods.getReserves().call({ from }),\n    contract.methods.totalSupply().call({ from }),\n  ]);\n  return {\n    balance: Number(web3.utils.fromWei(balance)),\n    token0: token0,\n    token1: token1,\n    reserve0: Number(web3.utils.fromWei(reserve0)),\n    reserve1: Number(web3.utils.fromWei(reserve1)),\n    blockTimestampLast: blockTimestampLast,\n    totalSupply: Number(web3.utils.fromWei(totalSupply)),\n  };\n}\n\nexport const isUniswapSymbol = (symbol: string) => symbol.startsWith(\"UNI-V2\");\n\n\nexport type BN = ReturnType<typeof web3.utils.toBN>\nexport type IUniswapInfo = {\n  balance: number;\n  token0: string;\n  token1: string;\n  reserve0: number;\n  reserve1: number;\n  blockTimestampLast: string;\n  totalSupply: number;\n};\n","import Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport { AddressAvatar, TokenAvatar } from \"../Avatar\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {\n  loadUniswapPairInfo,\n  IUniswapInfo,\n  isUniswapSymbol,\n} from \"../../providers/Uniswap\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  useWeb3AddressInfo,\n  weiBalance,\n  usdBalance,\n  IToken,\n  useWeb3Addresses,\n} from \"../../providers/Web3\";\n\nexport const TokensTable = () => {\n  const { data, loading, error } = useWeb3AddressInfo();\n  return (\n    <Paper>\n    <Box maxWidth=\"100%\" overflow=\"auto\">\n    <Table>\n      <TableHead>\n        <TableRow>\n          <TableCell>\n            <Typography>Symbol</Typography>\n          </TableCell>\n          <TableCell align=\"right\">\n            <Typography>Token</Typography>\n          </TableCell>\n          <TableCell align=\"right\">\n            <Typography>Balance</Typography>\n          </TableCell>\n          <TableCell align=\"right\">\n            <Typography>Value</Typography>\n          </TableCell>\n        </TableRow>\n        {loading ? <TableRow>\n          <TableCell style={{ padding: 0 }} colSpan={3}>\n            <LinearProgress />\n          </TableCell>\n        </TableRow>: null}\n      </TableHead>\n      <TableBody>\n        {(data?.tokens ?? []).map((token) => (\n          <TokenRow key={token.tokenInfo.address} token={token} />\n        ))}\n      </TableBody>\n    </Table>\n    </Box>\n    </Paper>\n  );\n};\n\nconst TokenRow = ({ token }: { token: IToken }) => {\n  const [from] = useWeb3Addresses();\n  const [pairInfo, setPairInfo] = useState<IUniswapInfo | null>(null);\n\n  useEffect(() => {\n    if (isUniswapSymbol(token.tokenInfo.symbol)) {\n      loadUniswapPairInfo(token.tokenInfo.address, from)\n        .then((info) => setPairInfo(info))\n        .catch((e) => console.error(`${token.tokenInfo.symbol} Error`, e));\n    }\n  }, [token, from]);\n\n  return (\n    <TableRow hover>\n      <TableCell>\n        <Box display=\"flex\" alignItems=\"center\">\n          <Box mr={1}>\n            <Avatar\n              src={`${\n                process.env.PUBLIC_URL\n              }/assets/tokens/${token.tokenInfo.address.toLowerCase()}.png`}\n            >\n              <AddressAvatar diameter={34} address={token.tokenInfo.address} />\n            </Avatar>\n          </Box>\n          <Typography>{token.tokenInfo.symbol}</Typography>\n        </Box>\n      </TableCell>\n      <TableCell align=\"right\">\n        <Typography>{token.tokenInfo.name}</Typography>\n      </TableCell>\n      <TableCell align=\"right\">\n        <Typography>{weiBalance(token)}</Typography>\n      </TableCell>\n      <TableCell align=\"right\">\n        {isUniswapSymbol(token.tokenInfo.symbol) ? (\n          pairInfo ? (\n            <Box display=\"flex\" flexDirection=\"column\" alignItems=\"flex-end\" justifyContent=\"flex-end\">\n              <Box mb={1} display=\"flex\" alignItems=\"center\" justifyContent=\"flex-end\">\n                <Typography style={{ marginRight: 4 }}>{(pairInfo.balance / pairInfo.totalSupply * pairInfo.reserve0).toLocaleString(undefined, {\n                  maximumFractionDigits: 4,\n                  minimumFractionDigits: 4\n                })}</Typography>\n                <TokenAvatar address={pairInfo.token0} />\n              </Box>\n              <Box display=\"flex\" alignItems=\"center\" justifyContent=\"flex-end\">\n                <Typography style={{ marginRight: 4 }}>{(pairInfo.balance / pairInfo.totalSupply * pairInfo.reserve1).toLocaleString(undefined, {\n                  maximumFractionDigits: 4,\n                  minimumFractionDigits: 4\n                })}</Typography>\n                <TokenAvatar address={pairInfo.token1} />\n              </Box>\n            </Box>\n          ) : null\n        ) : (\n          <Typography>{usdBalance(token)}</Typography>\n        )}\n      </TableCell>\n    </TableRow>\n  );\n};\n","import Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Box from \"@material-ui/core/Box\";\nimport { AddressAvatar } from \"../Avatar\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Paper from \"@material-ui/core/Paper\";\nimport React from \"react\";\nimport { useWeb3AddressTransactions, ITransaction } from \"../../providers/Web3\";\n\nexport const TransactionsTable = () => {\n  const { data, loading, error } = useWeb3AddressTransactions();\n  return (\n    <Paper>\n    <Table>\n      <TableHead>\n        <TableRow>\n          <TableCell>\n            <Typography>From</Typography>\n          </TableCell>\n          <TableCell>\n            <Typography>To</Typography>\n          </TableCell>\n          <TableCell align=\"right\">\n            <Typography>Value</Typography>\n          </TableCell>\n        </TableRow>\n        {loading ? <TableRow>\n          <TableCell style={{ padding: 0 }} colSpan={3}>\n            <LinearProgress />\n          </TableCell>\n        </TableRow>: null}\n      </TableHead>\n      <TableBody>\n        {(data || []).map((tx) => (\n          <TransactionRow key={tx.hash} tx={tx} />\n        ))}\n      </TableBody>\n    </Table>\n    </Paper>\n  );\n};\n\nconst TransactionRow = ({ tx }: { tx: ITransaction }) => {\n  return (\n    <TableRow hover>\n      <TableCell>\n        <Box display=\"flex\" alignItems=\"center\">\n          <Box mr={1}>\n            <Tooltip title={<Typography>{tx.from}</Typography>}>\n              <Avatar>\n                <AddressAvatar diameter={34} address={tx.from} />\n              </Avatar>\n            </Tooltip>\n          </Box>\n          <Hidden mdDown>\n            <Typography>{tx.from}</Typography>\n          </Hidden>\n        </Box>\n      </TableCell>\n      <TableCell>\n        <Box display=\"flex\" alignItems=\"center\">\n          <Box mr={1}>\n            <Tooltip title={<Typography>{tx.to}</Typography>}>\n              <Avatar>\n                <AddressAvatar diameter={34} address={tx.to} />\n              </Avatar>\n            </Tooltip>\n          </Box>\n          <Hidden smDown>\n            <Typography>{tx.to}</Typography>\n          </Hidden>\n        </Box>\n      </TableCell>\n      <TableCell align=\"right\">\n        <Typography>{tx.value} ETH</Typography>\n      </TableCell>\n    </TableRow>\n  );\n};\n","import React from \"react\";\n\nexport const CoinsIcon = (props: React.SVGProps<SVGSVGElement>) => {\n  return (\n    <svg\n      fill=\"currentColor\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 50 50\"\n      className=\"MuiSvgIcon-root\"\n      {...props}\n    >\n      <path d=\"M 35 0 C 31.039063 0 27.433594 0.570313 24.75 1.53125 C 23.40625 2.011719 22.3125 2.566406 21.46875 3.28125 C 20.625 3.996094 20 4.929688 20 6 C 20 6.199219 20.023438 6.40625 20.0625 6.59375 C 20.015625 6.722656 19.992188 6.863281 20 7 L 20 13 C 20 13.199219 20.023438 13.40625 20.0625 13.59375 C 20.015625 13.722656 19.992188 13.863281 20 14 L 20 17.3125 C 18.433594 17.105469 16.757813 17 15 17 C 11.039063 17 7.433594 17.570313 4.75 18.53125 C 3.40625 19.011719 2.3125 19.566406 1.46875 20.28125 C 0.625 20.996094 0 21.929688 0 23 C 0 23.199219 0.0234375 23.40625 0.0625 23.59375 C 0.015625 23.722656 -0.0078125 23.863281 0 24 L 0 30 C 0 30.199219 0.0234375 30.40625 0.0625 30.59375 C 0.015625 30.722656 -0.0078125 30.863281 0 31 L 0 37 C 0 37.199219 0.0234375 37.40625 0.0625 37.59375 C 0.015625 37.722656 -0.0078125 37.863281 0 38 L 0 44 C 0 45.070313 0.625 46.003906 1.46875 46.71875 C 2.3125 47.433594 3.40625 47.988281 4.75 48.46875 C 7.433594 49.425781 11.035156 50 15 50 C 18.964844 50 22.566406 49.425781 25.25 48.46875 C 26.59375 47.988281 27.6875 47.433594 28.53125 46.71875 C 29.375 46.003906 30 45.070313 30 44 L 30 39.6875 C 31.566406 39.894531 33.238281 40 35 40 C 38.964844 40 42.566406 39.425781 45.25 38.46875 C 46.59375 37.988281 47.6875 37.433594 48.53125 36.71875 C 49.375 36.003906 50 35.070313 50 34 L 50 28 C 50.007813 27.863281 49.984375 27.722656 49.9375 27.59375 C 49.976563 27.40625 50 27.199219 50 27 L 50 21 C 50.007813 20.863281 49.984375 20.722656 49.9375 20.59375 C 49.976563 20.40625 50 20.199219 50 20 L 50 14 C 50.007813 13.863281 49.984375 13.722656 49.9375 13.59375 C 49.976563 13.40625 50 13.199219 50 13 L 50 7 C 49.996094 6.859375 49.964844 6.722656 49.90625 6.59375 C 49.949219 6.402344 50 6.203125 50 6 C 50 4.929688 49.375 3.996094 48.53125 3.28125 C 47.6875 2.566406 46.59375 2.011719 45.25 1.53125 C 42.566406 0.570313 38.960938 0 35 0 Z M 35 2 C 38.769531 2 42.179688 2.554688 44.5625 3.40625 C 45.753906 3.832031 46.679688 4.332031 47.25 4.8125 C 47.820313 5.292969 48 5.6875 48 6 C 48 6.3125 47.820313 6.707031 47.25 7.1875 C 46.679688 7.667969 45.753906 8.167969 44.5625 8.59375 C 42.179688 9.445313 38.769531 10 35 10 C 31.230469 10 27.820313 9.445313 25.4375 8.59375 C 24.246094 8.167969 23.320313 7.667969 22.75 7.1875 C 22.179688 6.707031 22 6.3125 22 6 C 22 5.6875 22.179688 5.292969 22.75 4.8125 C 23.320313 4.332031 24.246094 3.832031 25.4375 3.40625 C 27.820313 2.554688 31.230469 2 35 2 Z M 22 9.09375 C 22.761719 9.625 23.664063 10.082031 24.75 10.46875 C 27.433594 11.429688 31.039063 12 35 12 C 38.960938 12 42.566406 11.429688 45.25 10.46875 C 46.335938 10.082031 47.238281 9.625 48 9.09375 L 48 13 C 48 13.3125 47.820313 13.707031 47.25 14.1875 C 46.679688 14.667969 45.753906 15.167969 44.5625 15.59375 C 42.179688 16.445313 38.769531 17 35 17 C 31.230469 17 27.820313 16.445313 25.4375 15.59375 C 24.246094 15.167969 23.320313 14.667969 22.75 14.1875 C 22.179688 13.707031 22 13.3125 22 13 Z M 22 16.09375 C 22.761719 16.625 23.664063 17.082031 24.75 17.46875 C 27.433594 18.429688 31.035156 19 35 19 C 38.964844 19 42.566406 18.429688 45.25 17.46875 C 46.335938 17.082031 47.238281 16.625 48 16.09375 L 48 20 C 48 20.3125 47.820313 20.707031 47.25 21.1875 C 46.679688 21.667969 45.753906 22.167969 44.5625 22.59375 C 42.179688 23.445313 38.769531 24 35 24 C 33.199219 24 31.472656 23.878906 29.90625 23.65625 C 29.90625 23.636719 29.90625 23.613281 29.90625 23.59375 C 29.949219 23.402344 30 23.203125 30 23 C 30 21.929688 29.375 20.996094 28.53125 20.28125 C 27.6875 19.566406 26.59375 19.011719 25.25 18.53125 C 24.277344 18.183594 23.183594 17.894531 22 17.65625 Z M 15 19 C 18.769531 19 22.179688 19.554688 24.5625 20.40625 C 25.753906 20.832031 26.679688 21.332031 27.25 21.8125 C 27.820313 22.292969 28 22.6875 28 23 C 28 23.3125 27.820313 23.707031 27.25 24.1875 C 26.679688 24.667969 25.753906 25.167969 24.5625 25.59375 C 22.179688 26.445313 18.769531 27 15 27 C 11.230469 27 7.820313 26.445313 5.4375 25.59375 C 4.246094 25.167969 3.320313 24.667969 2.75 24.1875 C 2.179688 23.707031 2 23.3125 2 23 C 2 22.6875 2.179688 22.292969 2.75 21.8125 C 3.320313 21.332031 4.246094 20.832031 5.4375 20.40625 C 7.820313 19.554688 11.230469 19 15 19 Z M 48 23.09375 L 48 27 C 48 27.3125 47.820313 27.707031 47.25 28.1875 C 46.679688 28.667969 45.753906 29.167969 44.5625 29.59375 C 42.179688 30.445313 38.769531 31 35 31 C 33.203125 31 31.496094 30.851563 29.9375 30.625 C 29.925781 30.625 29.917969 30.625 29.90625 30.625 C 29.910156 30.613281 29.902344 30.605469 29.90625 30.59375 C 29.949219 30.402344 30 30.203125 30 30 L 30 25.6875 C 31.558594 25.890625 33.246094 26 35 26 C 38.964844 26 42.566406 25.429688 45.25 24.46875 C 46.335938 24.082031 47.238281 23.625 48 23.09375 Z M 2 26.09375 C 2.761719 26.625 3.664063 27.082031 4.75 27.46875 C 7.433594 28.429688 11.039063 29 15 29 C 18.960938 29 22.566406 28.429688 25.25 27.46875 C 26.335938 27.082031 27.238281 26.625 28 26.09375 L 28 30 C 28 30.3125 27.820313 30.707031 27.25 31.1875 C 26.679688 31.667969 25.753906 32.167969 24.5625 32.59375 C 22.179688 33.445313 18.769531 34 15 34 C 11.230469 34 7.820313 33.445313 5.4375 32.59375 C 4.246094 32.167969 3.320313 31.667969 2.75 31.1875 C 2.179688 30.707031 2 30.3125 2 30 Z M 48 30.09375 L 48 34 C 48 34.3125 47.820313 34.707031 47.25 35.1875 C 46.679688 35.667969 45.753906 36.167969 44.5625 36.59375 C 42.179688 37.445313 38.769531 38 35 38 C 33.1875 38 31.476563 37.851563 29.90625 37.625 C 29.90625 37.613281 29.90625 37.605469 29.90625 37.59375 C 29.949219 37.402344 30 37.203125 30 37 L 30 32.6875 C 31.5625 32.894531 33.25 33 35 33 C 38.964844 33 42.566406 32.425781 45.25 31.46875 C 46.335938 31.082031 47.238281 30.625 48 30.09375 Z M 2 33.09375 C 2.761719 33.625 3.664063 34.082031 4.75 34.46875 C 7.433594 35.425781 11.035156 36 15 36 C 18.964844 36 22.566406 35.425781 25.25 34.46875 C 26.335938 34.082031 27.238281 33.625 28 33.09375 L 28 37 C 28 37.3125 27.820313 37.707031 27.25 38.1875 C 26.679688 38.667969 25.753906 39.167969 24.5625 39.59375 C 22.179688 40.445313 18.769531 41 15 41 C 11.230469 41 7.820313 40.445313 5.4375 39.59375 C 4.246094 39.167969 3.320313 38.667969 2.75 38.1875 C 2.179688 37.707031 2 37.3125 2 37 Z M 2 40.09375 C 2.761719 40.625 3.664063 41.082031 4.75 41.46875 C 7.433594 42.425781 11.035156 43 15 43 C 18.964844 43 22.566406 42.425781 25.25 41.46875 C 26.335938 41.082031 27.238281 40.625 28 40.09375 L 28 44 C 28 44.3125 27.820313 44.707031 27.25 45.1875 C 26.679688 45.667969 25.753906 46.167969 24.5625 46.59375 C 22.179688 47.445313 18.769531 48 15 48 C 11.230469 48 7.820313 47.445313 5.4375 46.59375 C 4.246094 46.167969 3.320313 45.667969 2.75 45.1875 C 2.179688 44.707031 2 44.3125 2 44 Z\" />\n    </svg>\n  );\n};\n\nexport default CoinsIcon;\n","import Box from \"@material-ui/core/Box\";\nimport Card from \"@material-ui/core/Card\";\nimport Grid from \"@material-ui/core/Grid\";\nimport React, { FC, useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport { UniswapApolloProvider } from \"../../providers/Uniswap/client\";\nimport { MainLayout } from \"../../components/Layout/Main\";\nimport { TokensTable } from \"../../components/Tokens/Table\";\nimport { TransactionsTable } from \"../../components/Transactions/Table\";\nimport Slide from \"@material-ui/core/Slide\";\nimport CoinsIcon from \"../../components/Icons/Coins\";\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\nimport OpacityIcon from \"@material-ui/icons/Opacity\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { UniswapLiquidityProviderHistory } from \"../Uniswap\"\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  tabRoot: {\n    minHeight: \"inherit\",\n  },\n  tab: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  padding: {\n    [theme.breakpoints.up(\"md\")]: {\n      paddingLeft: 24,\n      paddingRight: 24,\n    },\n  }\n}));\n\nexport const Home = () => {\n  const classes = useStyles();\n  const [tab, setTab] = useState(0);\n  return (\n    <MainLayout>\n      <Box pt={1} pb={5}>\n        <Grid container>\n          <Grid item xs={12}>\n            <Box className={classes.padding}>\n              <Tabs\n                value={tab}\n                onChange={(ev, value) => setTab(value)}\n                aria-label=\"Uniswap Dashboard Tabs\"\n                variant=\"scrollable\"\n                scrollButtons=\"auto\"\n              >\n                <Tab\n                  label={<Typography style={{ marginBottom: 4 }}>Tokens</Typography>}\n                  icon={<CoinsIcon style={{ marginRight: 6, marginBottom: 4 }} />}\n                  classes={{ root: classes.tabRoot, wrapper: classes.tab }}\n                />\n                <Tab\n                  label={<Typography style={{ marginBottom: 4 }}>Transactions</Typography>}\n                  icon={<ReceiptIcon style={{ marginRight: 6, marginBottom: 4 }} />}\n                  classes={{ root: classes.tabRoot, wrapper: classes.tab }}\n                />\n                <Tab\n                  label={<Typography style={{ marginBottom: 4 }}>Liquidity</Typography>}\n                  icon={<OpacityIcon style={{ marginRight: 6, marginBottom: 4 }} />}\n                  classes={{ root: classes.tabRoot, wrapper: classes.tab }}\n                />\n              </Tabs>\n              <Divider />\n            </Box>\n            <TabPanel activeTab={tab} index={0}>\n              {tab === 0 ? (\n                <Box className={classes.padding} pt={3}>\n                  <TokensTable />\n                </Box>\n              ) : null}\n            </TabPanel>\n            <TabPanel activeTab={tab} index={1}>\n              {tab === 1 ? (\n                <Box className={classes.padding} pt={3}>\n                  <TransactionsTable />\n                </Box>\n              ) : null}\n            </TabPanel>\n            <TabPanel activeTab={tab} index={2}>\n              {tab === 2 ? (\n                <Box px={3}>\n                  <UniswapApolloProvider>\n                    <UniswapLiquidityProviderHistory />\n                  </UniswapApolloProvider>\n                </Box>\n              ) : null}\n            </TabPanel>\n          </Grid>\n        </Grid>\n      </Box>\n    </MainLayout>\n  );\n};\n\nconst TabPanel: FC<{ activeTab: number, index: number }> = ({ activeTab, index, children }) => {\n  return (\n    <Slide in={activeTab === index} direction={activeTab < index ? \"left\" : \"right\"}>\n      <Box\n        position={activeTab === index ? \"relative\" : \"absolute\"}\n        style={{ opacity: activeTab === index ? 1 : 0 }}\n      >\n        {children}\n      </Box>\n    </Slide>\n  );\n};\n\nexport default Home;\n"],"sourceRoot":""}